version: '3.8'

services:
  # exo API and Web interface
  exo:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"  # API
      - "8001:8001"  # MCP
      - "3000:3000"  # Web
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=8001
      - WEB_PORT=3000
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - VECTOR_DB_PATH=/app/data/vector_db
      - DATA_DIR=/app/data
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/exo.log
    depends_on:
      - neo4j
    command: ["--interface", "all"]
    restart: unless-stopped

  # Neo4j for knowledge graph
  neo4j:
    image: neo4j:5.9.0
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - ./data/neo4j:/data
      - ./logs/neo4j:/logs
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
    restart: unless-stopped

  # ChromaDB for vector database (optional, can use local file-based ChromaDB)
  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    ports:
      - "8080:8000"
    volumes:
      - ./data/chroma:/chroma/chroma
    environment:
      - CHROMA_DB_IMPL=duckdb+parquet
      - CHROMA_PERSIST_DIRECTORY=/chroma/chroma
    restart: unless-stopped

networks:
  default:
    name: exo-network
